services:
  db:
    image: postgres:15-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: myquoteproject_db
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword # Pas dit aan!
    ports:
      - "5432:5432"
    # --- TOEGEVOEGD BLOK ---
    # Deze healthcheck controleert of de database klaar is om verbindingen te accepteren.
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d myquoteproject_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./django_app # Belangrijk: Hier wijzen we naar de map met je Dockerfile
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./django_app:/code # Koppelt de django_app map op je host aan /code in de container
    ports:
      - "8000:8000"
    environment:
      DB_NAME: myquoteproject_db
      DB_USER: myuser
      DB_PASSWORD: mypassword 
      DB_HOST: db
      DB_PORT: 5432
      DJANGO_SETTINGS_MODULE: core.settings # Hier 'core' als je projectnaam
    # --- AANGEPAST BLOK ---
    # We voegen de 'condition' toe zodat 'web' wacht tot 'db' "healthy" is.
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata: